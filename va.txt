<<<<<<< HEAD
<<<<<<< HEAD
void display() 
{ 
int i; 
if(top==-1) 
printf("the stack is empty\n"); 
else 
{ 
printf("the contents of the stack:\n"); 
for(i=top;i>=0;i--) 
printf("%d\n",stack[i]); 
} 
} 
voidpalin() 
{ 
char s[20],st[20]; 
inti,j,flag=1; 
charele; 
top=-1; 
printf("\nEnter the string:\n"); 
fflush(stdin); 
gets(st); 
for(i=0;st[i]!='\0';i++) 
{ 
s[++top]=st[i]; 
} 
printf("\nThe contents of the stack are:\n"); 
for(i=top;i>=0;i--) 
printf("%c\n",st[i]);
for(i=0;st[i]!='\0';i++)
if(st[i]!=s[top--])
{
flag=0;
break;
}
if(flag==0)
printf("string is not palindrome\n");
else
printf("string is palindrome\n");
=======
=======
<<<<<<< HEAD
void push(int element) 
{ 
if(top==MAX-1) 
printf("the stack is overflow\n"); 
else 
{ 
top++; 
printf("enter the element to be pushed into the stack\n"); 
scanf("%d",&element); 
stack[top]=element; 
} 
} 
int pop() 
{ 
char element; 
if(top==-1) 
{ 
printf("stack is underflow\n"); 
return 0; 
} 
else 
{ 
element=stack[top]; 
top--; 
return element; 
} 
} 
=======
=======
>>>>>>> dde6038150a0cf17148b71926a5063bafc0c796b
>>>>>>> 90fe330f13ef3e47edb3565262a6088c0464c35b
#include<stdio.h> 
#include<conio.h> 
#define MAX 5 
int stack[MAX],top; 
void main()
{
intele,choice;
void push(int);
int pop();
void display();
voidpalin();
clrscr();
top=-1;
for(;;)
{
printf("1-push\n2-pop\n3-display\n4-palindrome\n5-exit\n");
printf("enter the choice\n");
scanf("%d",&choice);
switch(choice)
{
case 1:push(ele);
break;
case 2:ele=pop();
if(ele!=0)
printf("The element deleted from stack is %d\n",ele);
break;
case 3:display();
break;
case 4:palin();
break;
case 5:exit(0);
default:printf("invalid choice\n");
break;
}
}
<<<<<<< HEAD
>>>>>>> dde6038150a0cf17148b71926a5063bafc0c796b
}
=======
}
<<<<<<< HEAD
>>>>>>> dde6038150a0cf17148b71926a5063bafc0c796b
=======
>>>>>>> dde6038150a0cf17148b71926a5063bafc0c796b
>>>>>>> 90fe330f13ef3e47edb3565262a6088c0464c35b
